unit Order_class;

interface
  uses data_module,IBX.IBTable;

  type TOrder = Class
  private
    id : integer;
    status : integer;
    driver_id : integer;
    procedure push;
  public
    constructor Create(row : TIBTable);
    destructor Destroy;
    procedure Edit(P_id: integer);
    // Return driver id
    procedure update_driver(id_driver : integer);
    function get_id : integer;
    function get_status : integer;

  End;
implementation

function TOrder.get_id;
begin
   get_id  := id;
end;

function TOrder.get_status ;
begin
   get_status := status;
end;
constructor TOrder.Create(row : TIBTable);
begin
    id := row.FieldByName('ID').AsInteger;
    status := row.FieldByName('STATUS').AsInteger;
    driver_id := row.FieldByName('WHO_DRIVED').AsInteger;
end;


destructor TOrder.Destroy;
begin

end;

procedure TOrder.Edit(P_id: Integer);
begin
  id := p_id;
end;

procedure TOrder.update_driver(id_driver : integer);
begin
   driver_id := id_driver;
   push;

end;

end.

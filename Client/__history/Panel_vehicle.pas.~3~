unit Panel_vehicle;


interface
uses Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, Vcl.ExtCtrls, Vehicle_class,Vehicle_interface;


type TPanel_Vehicle = Class(TPanel,TVehicle_Interface,IInterface)


  private
  vehicle : TVehicle;
  procedure put_details;

  // from interface
  public
  function get_id : integer;
  function get_status : integer;
  procedure update_vehicle(updated_Vehicle : TVehicle);
  procedure destroy_from_interface;


  constructor Create(AOwner: TComponent;PVehicle : TVehicle);
  destructor Destroy; override;
End;

implementation

// From iterface---------------------------------
function TPanel_Vehicle.get_id : integer;
begin
     get_id := vehicle.get_id;
end;

function TPanel_Vehicle.get_status;
begin
  get_status := vehicle.get_status;
end;

procedure TPanel_Vehicle.update_vehicle(updated_driver : TVehicle);
begin
  vehicle.Destroy;
  vehicle := update_vehicle;
  put_details;
end;

procedure  TPanel_Vehicle.destroy_from_interface;
begin
  destroy;
end;


// end From iterface---------------------------------

procedure TPanel_Vehicle.put_details;
begin
     caption := 'id: '+ intTostr(vehicle.get_id) + ' status: ' + intTostr(vehicle.get_status);
end;






constructor TPanel_Vehicle.Create(AOwner: TComponent;Pdriver : Tvehicle );
var
  p_info_width, p_queue_width : Integer;
begin
  inherited Create(AOwner);
  vehicle := Pvehicle;


 
  // Put here order details
  put_details;
end;

destructor TPanel_Vehicle.Destroy;
begin
  vehicle.Destroy;
  parent := nil;

  inherited;
end;

end.
